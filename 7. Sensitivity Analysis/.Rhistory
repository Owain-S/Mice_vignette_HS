require(mice)
require(lattice)
set.seed(123)
imp <- mice(nhanes, m = 3, print=F)
imp$pred
ini <- mice(nhanes, maxit=0, print=F)
pred <- ini$pred
pred
pred[ ,"hyp"] <- 0
pred
imp <- mice(nhanes, pred=pred, print=F)
imp <- mice(nhanes, print=F)
plot(imp)
require(mice)
require(lattice)
set.seed(123)
getwd()
setwd("~/Downloads/OneDrive_1_16-04-2024/2.Convergence and pooling")
require(mice)
require(lattice)
set.seed(123)
ini <- mice(mammalsleep[, -1], maxit=0, print=F)
meth<- ini$meth
meth
pred <- ini$pred
pred
pred[c("sws", "ps"), "ts"] <- 0
pred
meth["ts"]<- "~ I(sws + ps)"
pas.imp <- mice(mammalsleep[, -1], meth=meth, pred=pred, maxit=10, seed=123, print=F)
plot(pas.imp)
ini <- mice(boys, maxit = 0)
meth <- ini$meth
meth["tv"] <- "norm"
post <- ini$post
post
meth
post["tv"] <- "imp[[j]][, i] <- squeeze(imp[[j]][, i], c(1, 25))"
imp <- mice(boys, meth=meth, post=post, print=FALSE)
imp.pmm <- mice(boys, print=FALSE)
table(complete(imp)$tv)
table(complete(imp.pmm)$tv)
densityplot(imp, ~tv)
tv <- c(complete(imp.pmm)$tv, complete(imp)$tv)
method <- rep(c("pmm", "norm"), each = nrow(boys))
tvm <- data.frame(tv = tv, method = method)
histogram( ~tv | method, data = tvm, nint = 25)
library(mice) # Data imputation
library(dplyr) # Data manipulation
library(magrittr) # Flexible piping in R
library(purrr) # Flexible functional programming
set.seed(123)
meth <- make.method(boys)
meth["bmi"] <- "~ I(wgt / (hgt / 100)^2)"
pred <- make.predictorMatrix(boys)
pred[c("hgt", "wgt"), "bmi"] <- 0
pred
imp <-mice(boys,
meth = meth,
pred = pred,
print = FALSE,
m = 10,
maxit = 6)
?complete
imp %>%
mice::complete("long")
imp %>%
mice::complete("long") %>%
group_by(.id)
ave <- imp %>%
mice::complete("long") %>%
group_by(.id) %>%
summarise_all(.funs = mean) %>%
select(-.id, -.imp, -phb, -gen, -reg)
head(ave)
ave
cor.wrong <- ave %>%
cor() %>%
round(digits = 2)
cor.wrong
imp %>%
mice::complete("all")
or <- imp %>%
mice::complete("all") %>%
map(select, -phb, -gen, -reg) %>%
map(stats::cor)
or
cor <- imp %>%
mice::complete("all") %>%
map(select, -phb, -gen, -reg) %>%
map(stats::cor) %>%
map(fisher.trans)
fisher.trans <- function(x) 1/2 * log((1 + x) / (1 - x))
fisher.backtrans <- function(x) (exp(2 * x) - 1) / (exp(2 * x) + 1)
cor <- imp %>%
mice::complete("all") %>%
map(select, -phb, -gen, -reg) %>%
map(stats::cor) %>%
map(fisher.trans)
cor
cor
cor.rect <- Reduce("+", cor) / length(cor) # m is equal to the length of the list
cor.rect <- fisher.backtrans(cor.rect)
cor.wrong
round(cor.rect, digits = 2)
diag(cor.rect) <- 1
cor.rect
scope <- list(upper = ~ age + wgt + hc + gen + phb + tv + reg,
lower = ~ 1)
expr <- expression(f1 <- lm(hgt ~ 1),
f2 <- step(f1,
scope = scope,
direction = "forward",
trace = 0
))
expr
fit <- with(imp, expr)
fit
fit$analyses
fit$analyses[[10]]
fit$analyses[[10]]4
fit <- with(imp, expr)
formulas <- lapply(fit$analyses, formula)
formulas
terms <- lapply(formulas, terms)
terms
votes <- unlist(lapply(terms, labels))
votes
table(votes)
fit.gen <- with(imp, lm(hgt ~ age + hc + phb + wgt + gen))
fit.nogen <- with(imp, lm(hgt ~ age + hc + phb + wgt))
fit.nogen
D1(fit.gen, fit.nogen)
require(mice)
require(lattice)
require(pan)
set.seed(123)
con <- url("https://www.gerkovink.com/mimp/popular.RData")
load(con)
ls()
head(popNCR)
dim(popNCR)
nrow(popNCR)
ncol(popNCR)
summary(popNCR)
md.pattern(popNCR)
md.pattern(popNCR[ , -5])
histogram(~ popteach | is.na(popular), data=popNCR)
histogram(~ popteach | is.na(sex), data = popNCR)
histogram(~ popteach | is.na(texp), data = popNCR)
histogram(~ popteach | is.na(extrav), data = popNCR)
histogram(~ popular | is.na(popteach), data = popNCR)
head(popNCR)
aov(popular ~ as.factor(class), data = popNCR)
icc(aov(popular ~ as.factor(class), data = popNCR))
require(mice)
require(ggplot2)
require(parallel)
require(gridExtra)
require(purrr)
require(dplyr)
set.seed(123)
small_covmat <- diag(4)
small_covmat[small_covmat == 0] <- 0.5
small_data <- MASS::mvrnorm(1000,
mu = c(0, 0, 0, 0),
Sigma = small_covmat)
small_data_with_missings <- ampute(small_data, prop = 0.8, mech = "MCAR")$amp
head(small_data_with_missings)
dim(small_data_with_missings)
ms <- c(1, 1:10 * 5, 6:10 * 10, 6:20 * 20)
ms
ms <- c(1, 1:10 * 5, 6:10 * 10, 6:20 * 20)
small_mice_time        <- map_dbl(ms, ~ system.time(mice(small_data_with_missings, m = .x, print = FALSE))[3])
small_futuremice1_time <- map_dbl(ms, ~ system.time(futuremice(small_data_with_missings, m = .x, n.core = 1))[3])
small_futuremice2_time <- map_dbl(ms, ~ system.time(futuremice(small_data_with_missings, m = .x, n.core = 2))[3])
small_futuremice2_time <- map_dbl(ms, ~ system.time(futuremice(small_data_with_missings, m = .x, n.core = 2))[3])
small_futuremice3_time <- map_dbl(ms, ~ system.time(futuremice(small_data_with_missings, m = .x, n.core = 3))[3])
tibble(imputations = ms,
mice        = small_mice_time,
`1core`     = small_futuremice1_time,
`2core`     = small_futuremice2_time,
`3core`     = small_futuremice3_time) %>%
ggplot() +
geom_line(aes(x = imputations, y = mice, color = "A")) +
geom_line(aes(x = imputations, y = `1core`, color = "B")) +
geom_line(aes(x = imputations, y = `2core`, color = "C")) +
geom_line(aes(x = imputations, y = `3core`, color = "D")) +
xlab("Number of imputations") +
ylab("Time in seconds") +
scale_color_brewer(labels = c("Mice",
"Futuremice - 1 core",
"Futuremice - 2 cores",
"Futuremice - 3 cores"),
palette = "Set1") +
ggtitle("Time comparison with small data set")
set.seed(123)
library("mice")
library("lattice")
library("survival")
load("leiden.rData")
summary(leiden)
str(leiden)
head(leiden)
tail(leiden)
ini <- mice(leiden, maxit = 0)
sort(ini$nmis)
where <- make.where(leiden, "all")
where
method <- make.method(leiden, where = where)
method
summary(leiden)
method[method == "pmm"] <- "norm"
>mice
?mice
??mice
syn_param <- mice(heart_failure,
m = 10,
maxit = 5,
method = method,
where = where,
printFlag = FALSE)
syn_param <- mice(leiden,
m = 10,
maxit = 5,
method = method,
where = where,
printFlag = FALSE)
head(syn_param)
is.na(leiden)
mat <- !is.na(leiden)
mat
head(mat)
head(leiden)
?make.method
summary(leiden)
str(leiden)
head(leiden)
tail(leiden)
where <- !is.na(leiden)
method <- make.method(leiden, where = where)
method[method == "pmm"] <- "norm"
method
ini <- mice(leiden, maxit = 0)
sort(ini$nmis)
ini <- mice(leiden, maxit = 0)
sort(ini$nmis)
set.seed(123)
library("mice")
library("lattice")
library("survival")
load("leiden.rData")
getwd()
setwd("/Users/Shehw001/Documents/GitHub/mice_vignette/7. Sensitivity Analysis")
load("leiden.rData")
summary(leiden)
str(leiden)
head(leiden)
tail(leiden)
where <- !is.na(leiden)
method <- make.method(leiden, where = where)
method[method == "pmm"] <- "norm"
ini <- mice(leiden, maxit = 0)
sort(ini$nmis)
syn_param <- mice(leiden,
m = 10,
maxit = 1,
method = method,
where = where,
printFlag = FALSE)
syn_param
syn_param[[1]]
md.pattern(syn_param)
md.pattern(syn_param[[4]])
md.pattern(syn_param[4])
md.pattern(syn_param[[1]])
md.pattern(syn_param[[2]])
length(syn_param)
names(syn_param)
syn_param[[2]]
names(syn_param)
syn_param$imp
complete(syn_param$imp,2)
complete(syn_param, 4)
complete(syn_param, 2)
md.pattern(complete(syn_param, 2))
b1 <- complete(syn_param, 2)
b1
where <- !is.na(leiden)
method <- make.method(leiden, where = where)
method[method == "pmm"] <- "norm"
syn_param <- mice(leiden,
m = 10,
maxit = 1,
method = method,
where = where,
printFlag = FALSE)
syn_param$imp[[1]]
syn_param$imp
leiden[2,]
where[2,]
heart_failure <- readRDS(url("https://thomvolker.github.io/UMCUSynthetic/data/heart_failure.RDS"))
where <- make.where(heart_failure, "all")
where
where[1,]
heart_failure[1,]
?make.where
where <- make.where(leiden, "observed")
where
method <- make.method(leiden, where = where)
method[method == "pmm"] <- "norm"
syn_param <- mice(leiden,
m = 10,
maxit = 1,
method = method,
where = where,
printFlag = FALSE)
syn_param$imp[[1]]
syn_param$imp
leiden[1:8,]
syn_param$imp$chol
where
leiden[2,]
where[2,]
complete(syn_param,2)[2,]
complete(syn_param,4)[2,]
complete(syn_param,7)[2,]
complete(syn_param,7)[6,]
complete(syn_param,7)[5,]
dim(where)
dim(leiden)
md.pattern(complete(syn_param,7))
complete(syn_param,7)
ini <- mice(leiden, maxit = 0)
sort(ini$nmis)
md.pattern(leiden)
fx <- fluxplot(leiden)
summary(leiden)
str(leiden)
head(leiden)
tail(leiden)
where <- make.where(leiden, "observed")
method <- make.method(leiden, where = where)
method[method == "pmm"] <- "norm"
syn_param <- mice(leiden,
m = 10,
maxit = 1,
method = method,
where = where,
printFlag = FALSE)
head(leiden)
head(complete(syn_param,4))
head(where)
where <- make.where(leiden, "observed")
head(where)
summary(leiden)
str(leiden)
head(leiden)
tail(leiden)
where <- make.where(leiden, "all")
method <- make.method(leiden, where = where)
method[method == "pmm"] <- "norm"
syn_param <- mice(leiden,
m = 10,
maxit = 5,
method = method,
where = where,
printFlag = FALSE)
syn_param
?model.frame
formula
getwd()
